package xcore.backend.decode

import chisel3._
import chisel3.util._
import chisel3.util.experimental.decode._
import xcore._
import xcore.backend.decode._

trait HasRVITable extends HasXCoreParams {
  def LUI       = "b?????????????????????????0110111"
  def AUIPC     = "b?????????????????????????0010111"
  def JAL       = "b?????????????????????????1101111"
  def JALR      = "b?????????????????000?????1100111"
  def BEQ       = "b?????????????????000?????1100011"
  def BNE       = "b?????????????????001?????1100011"
  def BLT       = "b?????????????????100?????1100011"
  def BGE       = "b?????????????????101?????1100011"
  def BLTU      = "b?????????????????110?????1100011"
  def BGEU      = "b?????????????????111?????1100011"
  def LB        = "b?????????????????000?????0000011"
  def LH        = "b?????????????????001?????0000011"
  def LW        = "b?????????????????010?????0000011"
  def LBU       = "b?????????????????100?????0000011"
  def LHU       = "b?????????????????101?????0000011"
  def SB        = "b?????????????????000?????0100011"
  def SH        = "b?????????????????001?????0100011"
  def SW        = "b?????????????????010?????0100011"
  def ADDI      = "b?????????????????000?????0010011"
  def SLTI      = "b?????????????????010?????0010011"
  def SLTIU     = "b?????????????????011?????0010011"
  def XORI      = "b?????????????????100?????0010011"
  def ORI       = "b?????????????????110?????0010011"
  def ANDI      = "b?????????????????111?????0010011"
  def SLLI      = "b000000???????????001?????0010011"
  def SRLI      = "b000000???????????101?????0010011"
  def SRAI      = "b010000???????????101?????0010011"
  def ADD       = "b0000000??????????000?????0110011"
  def SUB       = "b0100000??????????000?????0110011"
  def SLL       = "b0000000??????????001?????0110011"
  def SLT       = "b0000000??????????010?????0110011"
  def SLTU      = "b0000000??????????011?????0110011"
  def XOR       = "b0000000??????????100?????0110011"
  def SRL       = "b0000000??????????101?????0110011"
  def SRA       = "b0100000??????????101?????0110011"
  def OR        = "b0000000??????????110?????0110011"
  def AND       = "b0000000??????????111?????0110011"
  def FENCE     = "b?????????????????000?????0001111"
  def FENCE_TSO = "b10000011001100000000000000001111"
  def PAUSE     = "b00000001000000000000000000001111"
  def ECALL     = "b00000000000000000000000001110011"
  def EBREAK    = "b00000000000100000000000001110011"

  def rv32ITable =
    List(
      LUI -> List(
        FUType.ALU,
        ExecASel.ZERO,
        ExecBSel.IMM,
        ImmType.UType,
        HasWriteBack.HasWB
      )
    )
}
